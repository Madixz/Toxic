import asyncio
import random
import re
import time
from random import choice, randint
from collections import deque
from telethon import events
import requests
from telethon.tl.functions.users import GetFullUserRequest
from telethon.tl.types import MessageEntityMentionName
from userbot.utils import admin_cmd, phantom_cmd

@borg.on(phantom_cmd(outgoing=True, pattern="fail$"))
async def fail(e):
        await e.edit("`\n▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄ `" 
                     "`\n████▌▄▌▄▐▐▌█████ `"    
                     "`\n████▌▄▌▄▐▐▌▀████ `"       
                     "`\n▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀ `")    


@borg.on(phantom_cmd(outgoing=True, pattern="loll$"))
async def loll(e):
        await e.edit("`\n╱┏┓╱╱╱╭━━━╮┏┓╱╱╱╱ `" 
                     "`\n╱┃┃╱╱╱┃╭━╮┃┃┃╱╱╱╱ `"       
                     "`\n╱┃┗━━┓┃╰━╯┃┃┗━━┓╱ `" 
                     "`\n╱┗━━━┛╰━━━╯┗━━━┛╱ `")
    
@borg.on(phantom_cmd(outgoing=True, pattern="rock$"))
async def rock(e):
        await e.edit("`\n┈╭╮┈┈┈┈┈┈┈┈┈┈┈┈ `"
                     "`\n┈┃┃┈╭╮┈┏╮╭╮╭╮┃╭ `"
                     "`\n┈┃┃┈┃┃┈┣┫┃┃┃┈┣┫ `"
                     "`\n┈┃┣┳┫┃┈┃╰╰╯╰╯┃╰ `"
                     "`\n╭┻┻┻┫┃┈┈╭╮┃┃━┳━ `"
                     "`\n┃╱╭━╯┃┈┈┃┃┃┃┈┃┈ `"
                     "`\n╰╮╱╱╱┃┈┈╰╯╰╯┈┃┈ `")

@borg.on(phantom_cmd(outgoing=True, pattern="ml(?: |$)(.*)"))
async def ml(e):
        message = e.pattern_match.group(1)
        await e.edit("`\n█████████`" 
                     "`\n█▄█████▄█`"    
                     "`\n█▼▼▼▼▼`"       
                     f"`\n█  {message}`"
                     "`\n█▲▲▲▲▲`"
                     "`\n█████████`"
                    "`\n ██   ██`")               


@borg.on(phantom_cmd(pattern=r"city"))
async def test(event):
    if event.fwd_from:
        return 
    await event.edit("""☁☁🌞      ☁           ☁
       ☁  ✈         ☁    🚁    ☁    ☁        ☁          ☁     ☁   ☁
🏬🏨🏫🏢🏤🏥🏦🏪🏫
              🌲/     l🚍\🌳👭
           🌳/  🚘 l  🏃 \🌴 👬                       👬  🌴/            l  🚔    \🌲
      🌲/   🚖     l               \
   🌳/🚶           |   🚍         \ 🌴🚴🚴
🌴/                    |                     \🌲""")

    

@borg.on(events.NewMessage(pattern=r"\.(.*)", outgoing=True))

async def _(event):

    if event.fwd_from:

        return

    animation_interval = 2

    animation_ttl = range(0, 11)


   

    input_str = event.pattern_match.group(1)

    if input_str == "fhack":

        await event.edit(input_str)

        animation_chars = [
        
            "`Connecting To Hacked Private Server...`",
            "`Target Selected.`",
            "`Hacking... 0%\n▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ `\n`Looking for telegram data...`\nETA: 0m, 20s",
            "`Hacking... 4%\n█▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ `\n`Found folder sd/telegram...`\n`Looking for telegram data : ✅`\nETA: 0m, 10s",
            "`Hacking... 8%\n██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ `\n`Searching for databases....`\n`Looking for telegram data : ✅`\n`Found folder sd/telegram : ✅ `\nETA: 0m, 15s",    
            "`Hacking... 20%\n█████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒`\n`Found msgstore.db.crypt12...`\n`Looking for telegram data : ✅`\n`Found folder sd/telegram : ✅ `\n`Searching for databases : ✅ `\nETA: 0m, 09s",
            "`Hacking... 36%\n█████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒ `\n`Trying to Decrypt...`\n`Looking for telegram data : ✅`\n`Found folder sd/telegram : ✅\n`Searching for databases : ✅`\n`Found msgstore.db.crypt12 :  ✅`\n`⚠️ error occurred ..`\nETA: 0m, 25s",
            "`Hacking... 52%\n█████████████▒▒▒▒▒▒▒▒▒▒▒▒ `\n`Decryption successful!`\n`Looking for telegram data : ✅`\n`⚠️ error occurred ..`\n`Found folder sd/telegram : ✅`\n`⚠️ error occurred ..`\n`Searching for databases : ✅`\n`Found msgstore.db.crypt12 :  ✅`\nETA: 0m, 25s",
            "`Hacking... 84%\n█████████████████████▒▒▒▒ `\n`Scanning file...`\n`Looking for telegram data : ✅`\n`⚠️ error occurred ..`\n`Found folder sd/telegram : ✅`\n`⚠️ error occurred ..`\n`⚠️ error occurred ..`\n`Searching for databases : ✅`\n`Found msgstore.db.crypt12 :  ✅`\n`Scanning file :  ✅`\nETA: 0m, 16s",
            "`Hacking... 100%\n` 98% HACKED`",
            "`Targeted Account Hacked...`\n\n`_______________________`\n`result ... :)`\n\n`Chatlist : ✅`\n`Calls : ✅`\n`groups : ✅`\n `Contacts : ✅`\n`Channel : ✅`\n`Deleted Messages : ❌`\n`Edited Messages : ❌`\n`All API Tokens : ✅`\n\n`Pay 99999$ to my boss.... `Or send your girlfriend's number To Remove This Hack`"
           
        ]
        await event.client.send_file(event.chat_id, SHUTDOWN,
                                                     caption="`hacking in progress...`", voice_note=True),
        await event.client.send_file(event.chat_id, STARTUP,
                                                     caption="`you will be hacked in a moment by my userbot. thank you..`", voice_note=True),

        for i in animation_ttl:

            await asyncio.sleep(animation_interval)

            await event.edit(animation_chars[i % 11])
    
            













    
